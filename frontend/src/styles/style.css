/*! style.css */

/* =================================================== */
/*  Variables                                          */
/* =================================================== */
:root {
    --main-color: #666;
    --white: white;
    --grey: #888;
    --bg-color: var(--white);
    --header-color: #799;
    --border-color: #dcdcdc;

    --add-color: var(--grey);
    --cancel-color: #9ab;
    --delete-color: #f77;
    --edit-color: var(--header-color);
    --update-color: #8a8;
    --error-color: #f33;

    --padding: 1em;
    --text-indent: 0.4em;

    --thick-border: 5px solid var(--border-color);
    --thin-border: 1px solid var(--border-color);

    --transition-duration: 0.4s;
}


/* =================================================== */
/*  Resets & site settings                             */
/* =================================================== */
html {
    box-sizing: border-box;
    color: var(--main-color);
    font-family: 'Quicksand', sans-serif;
    font-size: 100%;
    margin: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

*,
*::after,
*::before {
    box-sizing: inherit;
    margin: 0;
}

h1, h2, h3, h4, h5, h6 {
    font: inherit;
    line-height: 1.75;
    margin: 0;
}

p {
    margin-block-start: 0;
    margin-block-end: 0;
}

button, input, [type="submit"] {
    appearance: none;
    /* the autoprefixed appearance did not suffice in safari */
    background-color: transparent;
    border: none;
    border-radius: 2px;
    padding: 0;
}

button, [type="submit"] {
    cursor: pointer;
    user-select: none;
}

/* =================================================== */
/*  Layout                                             */
/* =================================================== */

.center {
    align-items: center;
    display: flex;
    justify-content: center;
}

.margin-top {
    margin-top: var(--padding);
}

.padding-bottom {
    padding-bottom: var(--padding);
}

.row {
    display: flex;
}

.vertical-center {
    align-items: center;
    display: flex;
}

.vertical-center > * {
    flex: 1 1 auto;
}

.vertical-margin {
    margin-bottom: var(--padding);
    margin-top: var(--padding);
}

.vertical-padding {
    padding-bottom: var(--padding);
    padding-top: var(--padding);
}

/* =================================================== */
/*  Content                                            */
/* =================================================== */

.header-container {
    background: var(--header-color);
    padding: var(--padding);
}

.header-title {
    color: var(--white);
    font-family: 'Montserrat', sans-serif;
    font-size: 1.25em;
    font-weight: 500;
    letter-spacing: 0.02em;
    text-transform: uppercase;
}

.btn-container {
    border-bottom: var(--thick-border);
    padding-left: 0.2em;
}

/* parent .items has a border-bottom as well,
this prevents the double thick border */
.item:last-of-type .btn-container {
    border-bottom: var(--thin-border);
}

.edit-container {
    max-height: 0;
}

.main-container {
    margin: 0 auto;
    max-width: 480px;
    padding: var(--padding);
}

.input {
    border-bottom: var(--thin-border);
    color: inherit;
    padding: 0.45em 0.3em 0.3em 0;
    text-indent: var(--text-indent);
    width: 100%;
}

/* Hide border color for input to remain its dimensions and 
position when toggling :disabled & :enabled */
.input:disabled {
    border-color: transparent;
}

.items {
    border-bottom: var(--thick-border);
    border-top: var(--thick-border);
    list-style-type: none;
    padding: 0;
}

.items:empty {
    border-top: var(--thin-border);
    padding: var(--padding) 0;
}

.items:empty:after {
    content: 'You have no items';
}

.item {
    max-height: 100vh;
}

.item-content {
    border-top: var(--thin-border);
}

.item:first-of-type .item-content {
    border-top: none; 
}

.item-name {
    color: inherit;
    font-size: 1.175em;
    margin-right: 0.65em;
}

/* opacity and fill-color needed to display disabled input as intended on iOS */
/* https://stackoverflow.com/questions/262158/disabled-input-text-color */
.item-name:disabled {
    opacity: 1;
    -webkit-text-fill-color: var(--main-color);
}


/* =================================================== */
/*  Button styles                                      */
/* =================================================== */

.btn {
    border-style: solid;
    border-width: 1px;
    font-size: 1em;
    margin-left: 0.85em;
    padding: 0.4em 0.5em;
}

.btn:first-of-type {
    margin-left: 0;
}

.btn-text {
    margin-left: 0.35em;
}

.add-btn {
    border-color: currentColor;
    color: var(--add-color);
}

.cancel-btn {
    border-color: currentColor;
    color: var(--cancel-color);
}

.delete-btn {
    border-color: currentColor;
    color: var(--delete-color);
}

.edit-btn {
    border-color: var(--bg-color);
    color: var(--edit-color);
}

.update-btn {
    border-color: currentColor;
    color: var(--update-color);
}

/* =================================================== */
/*  SVG icons                                          */
/* =================================================== */

.icon {
    height: 0.85em;
    width: 0.85em;
}

.icon path {
    fill: currentColor;
}

.add-icon path,
.close-icon path {
    stroke: currentColor;
    stroke-width: 4;
}


/* =================================================== */
/*  Transitions                                        */
/* =================================================== */

/*  Transition style on removal  */
.delete {
    max-height: 0;
    opacity: 0.3;
}

 /*  Initial style when adding an item */
.enter {
    max-height: 0;
    opacity: 0;
}

/*  Toggle edit & undo icon  */
.edit-icon,
.undo-icon {
    transition-duration: var(--transition-duration);
    transition-property: transform;
}

.item-name:disabled + .edit-btn .undo-icon {
    opacity: 0;
    transform: rotate(90deg);
    width: 0;
}

.item-name:enabled + .edit-btn .edit-icon {
    opacity: 0;
    transform: translate(100%, -100%) scale(0);
    width: 0;
}

.item-name:enabled + .edit-btn .undo-icon {
    opacity: 1;
    transform: rotate(270deg);
}

/*  Toggle sliding hide & show  */
.slide-transition {
    overflow: hidden;
    transition-duration: var(--transition-duration);
    transition-property: max-height, opacity;
}


/* =================================================== */
/*  Error styles                                       */
/* =================================================== */

.error-border {
    border-bottom-color: var(--error-color);
}

.error-message {
    color: var(--error-color);
}


/* =================================================== */
/*  Modal                                              */
/* =================================================== */

.modal {
    align-items: center;
    background: rgba(255, 255, 255, 0.8);
    cursor: pointer;
    display: none;
    justify-content: center;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

.modal-content {
    background: var(--bg-color);
    box-shadow: 0 2px 30px 10px var(--grey);
    cursor: default;
    line-height: 1.5;
    padding: 20px 20px 25px;
}

.close-modal {
    cursor: pointer;
    float: right;
}


/* =================================================== */
/*  Media queries                                      */
/* =================================================== */

@media screen and (hover) {

    .item-name {
        font-size: 1.05em;
    }

    .btn {
        font-size: 0.9em;
    }

    .btn:hover {
        color: var(--white);
    }

    .add-btn:hover {
        background-color: var(--add-color);
        border-color: var(--add-color);
    }

    .cancel-btn:hover {
        background-color: var(--cancel-color);
        border-color: var(--cancel-color);
    }

    .delete-btn:hover {
        background-color: var(--delete-color);
        border-color: var(--delete-color);
    }

    .edit-btn:hover {
        background-color: var(--edit-color);
        border-color: var(--edit-color);
    }
    
    .update-btn:hover {
        background-color: var(--update-color);
        border-color: var(--update-color);
    }

    .close-modal:hover .close-icon path {
        stroke: var(--error-color);
    }
}
